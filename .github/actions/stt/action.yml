name: gemini-STT
inputs:
  filename:
    description: "filename in artifact"
    required: true
  token:
    description: "gemini-token"
    required: true
  prompt:
    description: "prompt"
    required: true
  generateSchema:
    description: "output schema, need generateMime == application/json"
    required: false
  system-prompt:
    description: "system-prompt"
    required: true
  maxOutputTokens:
    description: "maxOutputTokens"
    required: false
  model:
    description: "gemini model"
    required: true
outputs:
  ai:
    description: ai
    value: ${{ steps.final-output.outputs.ai }}
runs:
  using: "composite"
  steps:
    - name: download audio
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.filename }}
        path: output
    - id: get-mime
      shell: bash
      run: |
        if [[ '${{ inputs.generateSchema }}' != '' ]]
        then
           echo 'use application/json output'
           echo "response-mime=application/json" >> "$GITHUB_OUTPUT"
        else
           echo 'use text/plain output'
           echo "response-mime=text/plain" >> "$GITHUB_OUTPUT"
        fi
    - name: speech to text with gemini
      uses: ktKongTong/gemini-action@v0.2.2
      id: gemini-stt
      with:
        token: ${{inputs.token}}
        model: ${{inputs.model}}
        file-path: output/${{ inputs.filename }}
        prompt: ${{ inputs.prompt }}
        system-prompt: ${{ inputs.system-prompt }}
        file-mime: audio/mp3
        responseMime: ${{ steps.get-mime.outputs.response-mime }}
        responseSchema: ${{ inputs.generateSchema }}
        maxOutputTokens: ${{ inputs.maxOutputTokens }}
    - name: set output
      shell: bash
      run: |
        cat <<'EOF' > tmp-stt.md
        ${{steps.gemini-stt.outputs.output}}
        EOF
    - name: Upload output.md
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.filename }}.stt.md
        path: tmp-stt.md
        if-no-files-found: error
        retention-days: 1
    - name: set output
      id: final-output
      shell: bash
      run: |
        if [[ '${{ steps.get-mime.outputs.response-mime }}' == 'application/json' ]]
        then
          echo 'use application/json output'
          cat tmp-stt.md > tmp-stt.json
        else
          echo 'use text/plain output'
          cat tmp-stt.md | jq -sR '{markdown: .}' > tmp-stt.json
        fi
        echo 'ai<<'EOF'' >> $GITHUB_OUTPUT
        cat tmp-stt.json >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT
        cat tmp-stt.json
    - name: clean file
      shell: bash
      run: |
        rm -f tmp-stt.md
        rm -rf tmp-stt.json
        rm -f output-stt.md