name: stt-gemini
on:
  workflow_dispatch:
    inputs:
      bvid:
        description: 'Bilibili bvid'
        required: false
      category:
        description: 'category'
        type: choice
        options:
          - btnews
          - commercial
          - opinion
        required: false
jobs:
# fetch audio by input & auto schedule
  prepare-video-meta:
    runs-on: ubuntu-latest
    outputs:
      exist: ${{ steps.get-video.outputs.exist }}
      filepath: ${{ steps.get-video.outputs.filepath }}
      path: ${{ steps.get-video.outputs.path }}
      index: ${{ steps.get-video.outputs.index }}
      date: ${{ steps.get-video.outputs.date }}
      avid: ${{ steps.get-video.outputs.avid }}
      bvid: ${{ steps.get-video.outputs.bvid }}
      cid: ${{ steps.get-video.outputs.cid }}
      title: ${{ steps.get-video.outputs.title }}
      description: ${{ steps.get-video.outputs.description }}
      category: ${{ steps.get-video.outputs.category }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'          
      - name: install deps
        run: npm install
      - name: fetch user audio video
        id: get-video
        run: npm run get-video -- --category ${{ github.event.inputs.category }} --bv ${{ github.event.inputs.bvid }}
  fetch-audio:
    runs-on: ubuntu-latest
    needs: [prepare-video-meta]
    if: ${{ needs.prepare-video-meta.outputs.exist == 'false' }}
    env:
      url: https://www.bilibili.com/video/${{needs.prepare-video-meta.outputs.bvid }}
      title: ${{ needs.prepare-video-meta.outputs.title }}
      category: ${{ needs.prepare-video-meta.outputs.category }}
    steps:
      - name: Setup FFmpeg
        uses: AnimMouse/setup-ffmpeg@v1
      - name: bili-action
        uses: ktKongTong/bili-action@v0.2.2
        with: 
          proxy-stream-host: ${{ secrets.BILI_STREAM_PROXY }}
          bvid: ${{ needs.prepare-video-meta.outputs.bvid }}
          cid: ${{ needs.prepare-video-meta.outputs.cid }}
          audio: true
          audio-file-template: 'output/{bvid}.mp4'
      - name: convert to mp3
        run: |
          ffmpeg -i output/${{ needs.prepare-video-meta.outputs.bvid }}.mp4 -ar 16000 output/${{ needs.prepare-video-meta.outputs.bvid }}.mp3
      - name: Upload output.mp3
        uses: actions/upload-artifact@v4
        with:
          name: output.mp3
          path: output/${{ needs.prepare-video-meta.outputs.bvid }}.mp3
          if-no-files-found: error
          retention-days: 1
      - name: gemini-action
        uses: ktKongTong/gemini-action@v0.1.0
        id: gemini-stt
        with: 
          token: ${{ secrets.GEMINI_TOKEN }}
          model: "gemini-2.0-flash"
          file-path: output/${{ needs.prepare-video-meta.outputs.bvid }}.mp3
          prompt: "这是一个音频文件，请转为文本，并按内容进行合适的分段，同时给每个分段加上标题。注意，只需要最终的内容，不需要类似于‘好的，下面是回复’这样的语句"
          file-mime: audio/mp3
      - name: show result
        run: |
          echo "${{steps.gemini-stt.outputs.output}}" > output.md
          cat output.md
      - name: Upload output.md
        uses: actions/upload-artifact@v4
        with:
          name: output.md
          path: output.md
          if-no-files-found: error
          retention-days: 1
  create-pr:
    if: ${{ needs.prepare-video-meta.outputs.exist == 'false' }}
    runs-on: ubuntu-latest
    needs: [prepare-video-meta]
    steps:
      - uses: actions/checkout@v4

      - name: mkdir
        run: mkdir -p tmp1
      - name: Download output.md
        uses: actions/download-artifact@v4
        with:
          name: output.md
          path: tmp1
      - name: createHead
        run: |
          echo '---
          title: ${{needs.prepare-video-meta.outputs.title }}
          description: ${{needs.prepare-video-meta.outputs.description }}
          tag: []
          date: ${{needs.prepare-video-meta.outputs.date }}
          bvid: ${{needs.prepare-video-meta.outputs.bvid }}
          ---
          ' >> tmp.md
          ls -l tmp1
          mkdir -p ${{ needs.prepare-video-meta.outputs.path }}
          cat tmp1/output.md >> tmp.md
          mv tmp.md ${{ needs.prepare-video-meta.outputs.filepath }}
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.PAT }}
          commit-message: ":memo: new ${{needs.prepare-video-meta.outputs.category}} ${{ needs.prepare-video-meta.outputs.title }}"
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          signoff: false
          delete-branch: true
          branch: fetch/${{ needs.prepare-video-meta.outputs.index }}
          title: ':memo: new ${{needs.prepare-video-meta.outputs.category}} ${{ needs.prepare-video-meta.outputs.title }}'
          add-paths: |
            docs/**/*.md
            images/**/*.webp
          base: master
          body: |
            new ${{needs.prepare-video-meta.outputs.category}} ${{ needs.prepare-video-meta.outputs.title }}
            - Auto-generated by action: [create-pull-request](https://github.com/peter-evans/create-pull-request) with dify
          labels: |
            ${{needs.prepare-video-meta.outputs.category}}
            automated pr
          draft: false
