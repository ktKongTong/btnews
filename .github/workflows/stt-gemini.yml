name: stt-gemini
on:
  workflow_dispatch:
    inputs:
      bvid:
        description: 'Bilibili bvid'
        required: false
      category:
        description: 'category'
        type: choice
        options:
          - btnews
          - commercial
          - opinion
        required: false
jobs:
  fetch-audio:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup FFmpeg
        uses: AnimMouse/setup-ffmpeg@v1
      - name: set input
        id: set-input
        env: 
          bvid: ${{ inputs.bvid }}
          category: ${{ inputs.category }}
        shell: bash
        run: |
          bash ${GITHUB_WORKSPACE}/.github/scripts/set-output.sh
      - name: bili-action
        id: bili
        uses: ktKongTong/bili-action@v0.2.4
        with: 
          proxy-stream-host: ${{ secrets.BILI_STREAM_PROXY }}
          bvid: ${{ inputs.bvid }}
          mid: ${{ steps.set-input.outputs.mid }}
          keyword: ${{ steps.set-input.outputs.keyword }}
          audio: true
          audio-file-template: 'output/{bvid}.mp4'
      - name: convert to mp3
        run: ffmpeg -i output/${{ steps.bili.outputs.bvid }}.mp4 -ar 16000 output/${{ steps.bili.outputs.bvid }}.mp3
      - name: Upload output.mp3
        uses: actions/upload-artifact@v4
        with:
          name: output.mp3
          path: output/${{ steps.bili.outputs.bvid }}.mp3
          if-no-files-found: error
          retention-days: 1
      - name: gemini-action
        uses: ktKongTong/gemini-action@v0.2.0
        id: gemini-stt
        with: 
          token: ${{ secrets.GEMINI_TOKEN }}
          model: "gemini-2.0-flash"
          file-path: output/${{ steps.bili.outputs.bvid }}.mp3
          prompt: "这是一个音频文件，请转为文本，并按内容进行合适的分段，同时给每个分段加上小标题。"
          file-mime: audio/mp3
      - name: show result
        run: |
          echo "${{steps.gemini-stt.outputs.output}}" > output.md
          cat output.md
      - name: Upload output.md
        uses: actions/upload-artifact@v4
        with:
          name: output.md
          path: output.md
          if-no-files-found: error
          retention-days: 1
      - name: set output to json
        run: | 
          echo '${{ steps.bili.outputs.video }}' > tmp.json
      - name: calc-vars
        id: calc-vars
        run: |
          bash ${GITHUB_WORKSPACE}/.github/scripts/title-parse.sh tmp.json
      - name: createHead
        run: |
          echo '---
          title: ${{steps.bili.outputs.title }}
          description: ${{steps.bili.outputs.title }}
          tag: []
          date: ${{steps.bili.outputs.pubdate }}
          bvid: ${{steps.bili.outputs.bvid }}
          ---
          ' >> tmp.md
          mkdir -p ${{ steps.calc-vars.outputs.path }}
          cat output.md >> tmp.md
          mv tmp.md ${{ steps.calc-vars.outputs.filepath }}
          
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.PAT }}
          commit-message: ":memo: new docs ${{ steps.bili.outputs.title }}"
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          signoff: false
          delete-branch: true
          branch: fetch/${{ steps.bili.outputs.bvid }}
          title: ":memo: new docs ${{ steps.bili.outputs.title }}"
          add-paths: |
            docs/**/*.md
            images/**/*.webp
          base: master
          body: |
            ":memo: new docs ${{ steps.bili.outputs.title }}"
            - Auto-generated by action: [create-pull-request](https://github.com/peter-evans/create-pull-request) with dify
          labels: |
            automated pr
          draft: false